{
  "lex": {
    "rules": [
      ["\\s+", "/* skip whitespace */"],
      ["[0-9]+(\\.[0-9]+)?", "return 'NUMBER';"],
      ["\\+", "return 'ADD';"],
      ["-", "return 'SUBTRACT';"],
      ["\\*", "return 'MULTIPLY';"],
      ["\\/", "return  'DIVIDE';"],
      ["\\^", "return 'POWER';"],
      ["=", "return 'EQUALS';"],
      ["<", "return 'LT';"],
      ["<=", "return 'LTEQ';"],
      ["≤", "return 'LTEQ';"],
      [">", "return 'GT';"],
      [">=", "return 'GTEQ';"],
      ["≥", "return 'GTEQ';"],
      ["\\(", "return 'OPEN';"],
      ["\\)", "return 'CLOSE';"],
      ["\\|", "return 'ABS';"],
      ["$", "return 'EOF';"],
      ["[a-z]", "return 'VARIABLE';"]
    ]
  },

  "bnf": {
    "input": [
      ["statement EOF", "return $1;"],
      ["top EOF", "return $1;"]
    ],

    "statement": [
      ["top EQUALS top", "$$ = yy.createNode('statement', ['equals', $1, $3]);"],
      ["top LT topo", "$$ = yy.createNode('statement', ['lt', $1, $3]);"],
      ["top GT top", "$$ = yy.createNode('statement', ['gt', $1, $3]);"],
      ["top LTEQ top", "$$ = yy.createNode('statement', ['lteq', $1, $3]);"],
      ["top GTEQ top", "$$ = yy.createNode('statement', ['gteq', $1, $3]);"]
    ],

    "top": [
      ["ABS expression ABS", "$$ = yy.abs($2);"],
      ["expression", "$$ = $1;"]
    ],

    "expression": [
      ["expression ADD term", "$$ = yy.append($1, {value: $3, negate: false});"],
      ["expression ADD ABS expression ABS", "$$ = yy.append($1, {value: yy.abs($4), negate: false});"],
      ["expression SUBTRACT term", "$$ = yy.append($1, {value: $3, negate: true});"],
      ["expression SUBTRACT ABS expression ABS", "$$ = yy.append($1, {value: yy.abs($4), negate: true});"],
      ["term", "$$ = yy.createNode('termlist', [{value: $1, negate: false}]);"]
    ],

    "term": [
      ["term MULTIPLY factor", "$$ = yy.append($1, {value: $3, invert: false});"],
      ["term MULTIPLY ABS expression ABS", "$$ = yy.append($1, {value: yy.abs($4), invert: false});"],
      ["term nonnegatefactor", "$$ = yy.append($1, {value: $2, invert: false});"],
      ["term DIVIDE factor", "$$ = yy.append($1, {value: $3, invert: true});"],
      ["term DIVIDE ABS expression ABS", "$$ = yy.append($1, {value: yy.abs($4), invert: true});"],
      ["factor", "$$ = yy.createNode('factorlist', [{value: $1, invert: false}]);"]
    ],

    "factor": [
      ["SUBTRACT nonnegatefactor", "$$ = yy.createNode('factorlist', [{value: yy.createNode('atom', ['number', -1]), invert: false}, {value: $2, negate: false}]);"],
      ["nonnegatefactor", "$$ = $1;"]
    ],

    "nonnegatefactor": [
      ["OPEN expression CLOSE", "$$ = $2;"],
      ["nonnegatefactor POWER atom", "$$ = yy.createNode('fun', ['power', $1, $3]);"],
      ["atom", "$$ = $1;"]
    ],

    "atom": [
      ["NUMBER", "$$ = yy.createNode('atom', ['number', $1]);"],
      ["VARIABLE", "$$ = yy.createNode('atom', ['variable', $1]);"]
    ]
  }
}
